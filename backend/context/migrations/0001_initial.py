# Generated by Django 5.0.6 on 2025-07-04 11:49

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ContextEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(help_text='The actual content of the message/note/email')),
                ('source_type', models.CharField(choices=[('whatsapp', 'WhatsApp Message'), ('email', 'Email'), ('note', 'Personal Note'), ('calendar', 'Calendar Event'), ('reminder', 'Reminder'), ('meeting', 'Meeting Notes'), ('call', 'Phone Call'), ('other', 'Other')], default='note', max_length=20)),
                ('source_details', models.JSONField(blank=True, default=dict, help_text='Additional source information (sender, subject, etc.)')),
                ('context_date', models.DateTimeField(help_text='When this context occurred')),
                ('priority_level', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=20)),
                ('processed_insights', models.JSONField(blank=True, default=dict, help_text='AI-extracted insights and keywords')),
                ('sentiment_score', models.FloatField(default=0.0, help_text='Sentiment analysis score (-1 to 1)', validators=[django.core.validators.MinValueValidator(-1.0), django.core.validators.MaxValueValidator(1.0)])),
                ('keywords', models.JSONField(blank=True, default=list, help_text='Extracted keywords and phrases')),
                ('entities', models.JSONField(blank=True, default=list, help_text='Extracted entities (people, places, dates, etc.)')),
                ('task_suggestions', models.JSONField(blank=True, default=list, help_text='AI-suggested tasks based on this context')),
                ('relevance_score', models.FloatField(default=0.0, help_text='How relevant this context is for task management', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(10.0)])),
                ('is_processed', models.BooleanField(default=False)),
                ('is_archived', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='context_entries', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Context Entries',
                'ordering': ['-context_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ContextInsight',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('insight_type', models.CharField(choices=[('pattern', 'Behavioral Pattern'), ('trend', 'Trend Analysis'), ('recommendation', 'AI Recommendation'), ('summary', 'Daily Summary')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('confidence_score', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('date_range_start', models.DateTimeField()),
                ('date_range_end', models.DateTimeField()),
                ('suggested_actions', models.JSONField(blank=True, default=list)),
                ('is_actionable', models.BooleanField(default=False)),
                ('is_dismissed', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('context_entries', models.ManyToManyField(blank=True, to='context.contextentry')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='context_insights', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='contextentry',
            index=models.Index(fields=['user', 'context_date'], name='context_con_user_id_c003c2_idx'),
        ),
        migrations.AddIndex(
            model_name='contextentry',
            index=models.Index(fields=['source_type', 'priority_level'], name='context_con_source__92ee8b_idx'),
        ),
        migrations.AddIndex(
            model_name='contextentry',
            index=models.Index(fields=['is_processed'], name='context_con_is_proc_0a11a6_idx'),
        ),
        migrations.AddIndex(
            model_name='contextinsight',
            index=models.Index(fields=['user', 'insight_type'], name='context_con_user_id_251cc4_idx'),
        ),
        migrations.AddIndex(
            model_name='contextinsight',
            index=models.Index(fields=['date_range_start', 'date_range_end'], name='context_con_date_ra_e4c404_idx'),
        ),
    ]
